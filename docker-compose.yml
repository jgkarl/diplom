networks:
  net:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  neo_data:
    driver: local

services:
  postgres:
    image: postgres:17
    container_name: database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/database-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"

  backend:
    build: ./backend
    container_name: backend
    restart: always
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - ./frontend/static:/app/static/client
      
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    links:
      - postgres
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 300s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    command: >
      sh -c "npm run dev"
    volumes:
      - ./frontend/src:/app/src
    ports:
      - "5173:5173"
    env_file:
      - .env
    depends_on:
      - postgres
      - backend

  neo4j:
    image: neo4j:5
    container_name: neobase
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo_data:/data/neo
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=${NEO4J_ACCEPT}
      - dbms.connector.bolt.listen_address=:7687
      - dbms.connector.bolt.advertised_address=:7687
